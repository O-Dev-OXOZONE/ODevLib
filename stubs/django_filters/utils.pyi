from .exceptions import FieldLookupError as FieldLookupError
from _typeshed import Incomplete

def deprecate(msg, level_modifier: int = ...) -> None: ...

class MigrationNotice(DeprecationWarning):
    url: str
    def __init__(self, message) -> None: ...

class RenameAttributesBase(type):
    renamed_attributes: Incomplete
    def __new__(metacls, name, bases, attrs): ...
    def get_name(metacls, name): ...
    def __getattr__(metacls, name): ...
    def __setattr__(metacls, name, value): ...

def try_dbfield(fn, field_class): ...
def get_all_model_fields(model): ...
def get_model_field(model, field_name): ...
def get_field_parts(model, field_name): ...
def resolve_field(model_field, lookup_expr): ...
def handle_timezone(value, is_dst: Incomplete | None = ...): ...
def verbose_field_name(model, field_name): ...
def verbose_lookup_expr(lookup_expr): ...
def label_for_filter(model, field_name, lookup_expr, exclude: bool = ...): ...
def translate_validation(error_dict): ...
